{"version":3,"sources":["components/FilmsList/Cast.module.css","components/FilmsList/Review.module.css","components/FilmsList/Movie.module.css","components/FilmsList/Cast.js","components/FilmsList/Review.js","components/FilmsList/Movie.js","utils/FetchArticlies.js"],"names":["module","exports","Cast","state","cast","isLoading","this","setState","fetchFilm","props","match","params","id","then","data","finally","Loader","map","item","idx","key","className","style","image","src","profile_path","alt","name","character","Component","Review","review","results","length","styles","container","author","content","Movie","film","currentQS","from","history","location","poster_path","original_title","release_date","vote_average","overview","genres","date","Date","getFullYear","goBackBtn","to","pathname","ganre","path","component","fetchFilms","varCall","query","call","apiKey","axios","get","response","varApi"],"mappings":"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","file":"static/js/5.b9eb8e67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"Cast_image__2yJJ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Review_container__3po3T\",\"author\":\"Review_author__psGbh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"goBackBtn\":\"Movie_goBackBtn__3t0A7\",\"image\":\"Movie_image__pgWIy\"};","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { fetchFilm } from '../../utils/FetchArticlies';\r\nimport style from './Cast.module.css';\r\nimport LoaderSpiner from '../Loader/Loader';\r\n\r\nexport default class Cast extends Component {\r\n  static propTypes = {\r\n    match: PropTypes.object,\r\n  };\r\n\r\n  state = {\r\n    cast: [],\r\n    isLoading: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({ isLoading: true });\r\n    fetchFilm(this.props.match.params.id, '/credits')\r\n      .then(data => {\r\n        this.setState({\r\n          cast: data.cast,\r\n        });\r\n      })\r\n      .finally(this.setState({ isLoading: false }));\r\n  }\r\n\r\n  render() {\r\n    const { cast } = this.state;\r\n    return (\r\n      <div>\r\n        {this.state.isLoading && <LoaderSpiner />}\r\n        {cast.map(\r\n          (item, idx) =>\r\n            idx <= 10 && (\r\n              <div key={item.id}>\r\n                <div>\r\n                  <img\r\n                    className={style.image}\r\n                    src={`https://image.tmdb.org/t/p/w500${item.profile_path}`}\r\n                    alt={item.name}\r\n                  ></img>\r\n                </div>\r\n                <div> {item.name} </div>\r\n                <div> Character: {item.character} </div>\r\n              </div>\r\n            ),\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { fetchFilm } from '../../utils/FetchArticlies';\r\nimport styles from './Review.module.css';\r\nimport LoaderSpiner from '../Loader/Loader';\r\n\r\nexport default class Review extends Component {\r\n  static propTypes = {\r\n    match: PropTypes.object,\r\n  };\r\n\r\n  state = {\r\n    review: [],\r\n    isLoading: true,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    fetchFilm(this.props.match.params.id, '/reviews')\r\n      .then(data => {\r\n        this.setState({\r\n          review: data.results,\r\n        });\r\n      })\r\n      .finally(\r\n        this.setState({\r\n          isLoading: false,\r\n        }),\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const { review } = this.state;\r\n    return (\r\n      <div>\r\n        {this.state.isLoading && <LoaderSpiner />}\r\n        {review.length > 0 ? (\r\n          review.map(item => (\r\n            <div key={item.id} className={styles.container}>\r\n              <div className={styles.author}> Author: {item.author} </div>\r\n              <div> {item.content} </div>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <div> We don 't have any reviews for this movie</div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { NavLink, Route, Link, Switch } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport LoaderSpiner from '../Loader/Loader';\r\nimport Cast from './Cast';\r\nimport Review from './Review';\r\nimport { fetchFilm } from '../../utils/FetchArticlies';\r\nimport styles from './Movie.module.css';\r\n\r\nexport default class Movie extends Component {\r\n  static propTypes = {\r\n    state: PropTypes.array,\r\n    match: PropTypes.object,\r\n  };\r\n\r\n  state = {\r\n    film: [],\r\n    currentQS: null,\r\n    from: null,\r\n    isLoading: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    const { state } = this.props.history.location;\r\n\r\n    fetchFilm(this.props.match.params.id)\r\n      .then(data => {\r\n        this.setState({\r\n          film: data,\r\n        });\r\n      })\r\n      .finally(\r\n        this.setState({\r\n          isLoading: false,\r\n        }),\r\n      );\r\n    this.setState({\r\n      currentQS: state ? this.props.history.location.state.currentQS : '',\r\n      from: state ? this.props.location.state.from : '/movies',\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      poster_path,\r\n      original_title,\r\n      release_date,\r\n      vote_average,\r\n      overview,\r\n      genres,\r\n      id,\r\n    } = this.state.film;\r\n    const date = new Date(release_date).getFullYear();\r\n\r\n    return (\r\n      <div>\r\n        {this.state.isLoading && <LoaderSpiner />}\r\n        <Link\r\n          className={styles.goBackBtn}\r\n          to={{\r\n            pathname: this.state.from,\r\n            state: this.state.currentQS,\r\n          }}\r\n        >\r\n          Go back\r\n        </Link>\r\n        <div>\r\n          <div>\r\n            <img\r\n              className={styles.image}\r\n              src={`https://image.tmdb.org/t/p/w500${poster_path}`}\r\n              alt={original_title}\r\n            ></img>\r\n          </div>\r\n          <div>\r\n            <h3>\r\n              <span> {original_title} </span> <span> ({date}) </span>\r\n            </h3>\r\n            <div> User score: {vote_average * 10} % </div> <h4> Overview </h4>\r\n            <div> {overview} </div> <h5> Genres </h5>\r\n            <div>\r\n              {genres &&\r\n                genres.map(ganre => <span key={ganre.id}> {ganre.name} </span>)}\r\n            </div>\r\n          </div>\r\n          <h6> Additional information </h6>\r\n          <ul>\r\n            <li>\r\n              <NavLink to={`/movies/${id}/cast`}> Cast </NavLink>\r\n            </li>\r\n            <li>\r\n              <NavLink to={`/movies/${id}/reviews`}> Review </NavLink>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <Switch>\r\n          <Route path={`${this.props.match.path}/cast`} component={Cast} />\r\n          <Route path={`${this.props.match.path}/reviews`} component={Review} />\r\n        </Switch>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import axios from 'axios';\r\n\r\n// axios.defaults.baseURL = 'http://localhost:3000';\r\n\r\nexport const fetchFilms = (\r\n  varCall,\r\n  query = '',\r\n  call = 'https://cors-anywhere.herokuapp.com/https://api.themoviedb.org/3',\r\n  apiKey = '?api_key=4a5cadf6daa6bc485963a82552edeadc',\r\n) => {\r\n  return axios\r\n    .get(`${call}${varCall}${apiKey}${query}`)\r\n    .then(response => response.data);\r\n};\r\n\r\nexport const fetchFilm = (\r\n  id,\r\n  varApi,\r\n  call = 'https://cors-anywhere.herokuapp.com/https://api.themoviedb.org/3/movie/',\r\n  apiKey = '?api_key=4a5cadf6daa6bc485963a82552edeadc',\r\n) => {\r\n  return axios\r\n    .get(`${call}${id}${varApi}${apiKey}`)\r\n    .then(response => response.data);\r\n};\r\n"],"sourceRoot":""}